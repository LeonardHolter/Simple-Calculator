{"ast":null,"code":"var _jsxFileName = \"/Users/leonard/coding/calculator-react/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const resultRef = useRef(null);\n  const [result, setResult] = useState(0);\n  function plus(e) {\n    e.preventDefault();\n    setResult(result => result + Number(inputRef.current.value));\n  }\n  ;\n  function minus(e) {\n    e.preventDefault();\n    setResult(result => result - Number(inputRef.current.value));\n  }\n  ;\n  function times(e) {\n    e.preventDefault();\n    setResult(result => result * Number(inputRef.current.value));\n  }\n  ;\n  function divide(e) {\n    e.preventDefault();\n    setResult(result => result - Number(inputRef.current.value));\n  }\n  ;\n  function resetInput(e) {\n    // Add the code for the resetInput function \n  }\n  ;\n  function resetResult(e) {\n    // Add the code for the resetResult function \n  }\n  ;\n  const change = event => {\n    setResult(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simplest Working Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: resultRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        pattern: \"[0-9]\",\n        ref: inputRef,\n        type: \"number\",\n        placeholder: \"Type a number\",\n        input: true,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: plus,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: minus,\n        children: \"minus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: times,\n        children: \"multiply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: divide,\n        children: \"divide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iMUG+fAB4x2aPXzcLfNNNKt0TI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","App","_s","inputRef","resultRef","result","setResult","plus","e","preventDefault","Number","current","value","minus","times","divide","resetInput","resetResult","change","event","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","pattern","type","placeholder","input","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/leonard/coding/calculator-react/src/App.js"],"sourcesContent":["import {useState,useRef} from \"react\"; \nimport \"./App.css\";\n\nfunction App() { \n  const inputRef = useRef(null); \n  const resultRef = useRef(null); \n  const [result, setResult] = useState(0); \n \n  function plus(e) { \n    e.preventDefault(); \n    setResult((result) => result + Number(inputRef.current.value)); \n  }; \n \n  function minus(e) { \n    e.preventDefault(); \n    setResult((result) => result - Number(inputRef.current.value)); \n  };\n \n  function times(e) { \n    e.preventDefault(); \n    setResult((result) => result * Number(inputRef.current.value)); \n  }; \n \n  function divide(e) { \n    e.preventDefault(); \n    setResult((result) => result - Number(inputRef.current.value)); \n  };\n \n  function resetInput(e) { \n    // Add the code for the resetInput function \n  }; \n \n  function resetResult(e) { \n  \t// Add the code for the resetResult function \n  }; \n\n\n  const change = event => {\n    setResult(event.target.value)\n  }\n\n \n  return ( \n    <div className=\"App\"> \n      <div> \n        <h1>Simplest Working Calculator</h1> \n      </div> \n      <form> \n        <p ref={resultRef}> \n          {/* add the value of the current total */} \n        </p> \n        <input\n          pattern=\"[0-9]\" \n          ref={inputRef} \n          type=\"number\" \n          placeholder=\"Type a number\" \n          input onChange={change}\n\n        /> \n        <button onClick={plus}>add</button> \n        <button onClick={minus}>minus</button>\n        <button onClick={times}>multiply</button>\n        <button onClick={divide}>divide</button>\n\n        {/* Add the resetInput button */} \n        {/* Add the resetResult button */} \n      </form> \n    </div> \n  ); \n} \n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}